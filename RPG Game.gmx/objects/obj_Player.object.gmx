<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initilalize Variable

playerspeed = 4;
vspeed = 0;
hspeed = 0;

ismoving = false;
playermovement = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement 

if (ismoving == false)
    {
        place_snapped(32,32)
    }

if (playermovement == true)
{

    if(place_snapped(32,32))
    {
    if keyboard_check(ord('W'))
        {
            ismoving = true;
            if (keyboard_check(vk_shift))
            {
                vspeed = -8;
                hspeed = 0;
            }
            else
            {
                vspeed = -4;
                hspeed = 0;
            }
        }
    else if keyboard_check(ord('A'))
        {
            ismoving = true;
            if (keyboard_check(vk_shift))
            {
                vspeed = 0;
                hspeed = -8;  
            }
            else
            {
                vspeed = 0;
                hspeed = -4;
            }
        }
    else if keyboard_check(ord('D'))
        {
            ismoving = true;
            if (keyboard_check(vk_shift))
            {
                vspeed = 0;
                hspeed = 8;
            }
            else
            {
                vspeed = 0;
                hspeed = 4;
            }
        }
    else if keyboard_check(ord('S'))
        {
            ismoving = true;
            if (keyboard_check(vk_shift))
            {
                vspeed = 8;
                hspeed = 0;
            }
            else
            {
                vspeed = 4;
                hspeed = 0;
            }
        }
    else
        {
            ismoving = false;
            vspeed = 0;
            hspeed = 0;   
        }
    }
}

if (playermovement = false)
    {
        ismoving = false;
    }

if (ismoving = false)
    {
        vspeed = 0;
        hspeed = 0;
    }
    
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playermovement = false;
io_clear();
if (ismoving == false)
{
    if !instance_exists(obj_transition)
    {
        var tempRoomFade;
        tempRoomFade = instance_create(x,y,obj_transition);
        tempRoomFade.tempTarget = other.targetRoom;
        tempRoomFade.xpos = other.target_x;
        tempRoomFade.ypos = other.target_y;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playermovement = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
